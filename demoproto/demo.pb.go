// Code generated by protoc-gen-go. DO NOT EDIT.
// source: demoproto/demo.proto

package demoproto

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type DemoRequest struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DemoRequest) Reset()         { *m = DemoRequest{} }
func (m *DemoRequest) String() string { return proto.CompactTextString(m) }
func (*DemoRequest) ProtoMessage()    {}
func (*DemoRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_1b16454c98f05f4c, []int{0}
}

func (m *DemoRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DemoRequest.Unmarshal(m, b)
}
func (m *DemoRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DemoRequest.Marshal(b, m, deterministic)
}
func (m *DemoRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DemoRequest.Merge(m, src)
}
func (m *DemoRequest) XXX_Size() int {
	return xxx_messageInfo_DemoRequest.Size(m)
}
func (m *DemoRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DemoRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DemoRequest proto.InternalMessageInfo

func (m *DemoRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type DemoResponse struct {
	Greeting             string   `protobuf:"bytes,1,opt,name=greeting,proto3" json:"greeting,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DemoResponse) Reset()         { *m = DemoResponse{} }
func (m *DemoResponse) String() string { return proto.CompactTextString(m) }
func (*DemoResponse) ProtoMessage()    {}
func (*DemoResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_1b16454c98f05f4c, []int{1}
}

func (m *DemoResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DemoResponse.Unmarshal(m, b)
}
func (m *DemoResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DemoResponse.Marshal(b, m, deterministic)
}
func (m *DemoResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DemoResponse.Merge(m, src)
}
func (m *DemoResponse) XXX_Size() int {
	return xxx_messageInfo_DemoResponse.Size(m)
}
func (m *DemoResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_DemoResponse.DiscardUnknown(m)
}

var xxx_messageInfo_DemoResponse proto.InternalMessageInfo

func (m *DemoResponse) GetGreeting() string {
	if m != nil {
		return m.Greeting
	}
	return ""
}

func init() {
	proto.RegisterType((*DemoRequest)(nil), "demo.demoRequest")
	proto.RegisterType((*DemoResponse)(nil), "demo.demoResponse")
}

func init() { proto.RegisterFile("demoproto/demo.proto", fileDescriptor_1b16454c98f05f4c) }

var fileDescriptor_1b16454c98f05f4c = []byte{
	// 147 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x12, 0x49, 0x49, 0xcd, 0xcd,
	0x2f, 0x28, 0xca, 0x2f, 0xc9, 0xd7, 0x07, 0xb1, 0xf4, 0xc0, 0x4c, 0x21, 0x16, 0x10, 0x5b, 0x49,
	0x91, 0x8b, 0x1b, 0x44, 0x07, 0xa5, 0x16, 0x96, 0xa6, 0x16, 0x97, 0x08, 0x09, 0x71, 0xb1, 0xe4,
	0x25, 0xe6, 0xa6, 0x4a, 0x30, 0x2a, 0x30, 0x6a, 0x70, 0x06, 0x81, 0xd9, 0x4a, 0x5a, 0x5c, 0x3c,
	0x10, 0x25, 0xc5, 0x05, 0xf9, 0x79, 0xc5, 0xa9, 0x42, 0x52, 0x5c, 0x1c, 0xe9, 0x45, 0xa9, 0xa9,
	0x25, 0x99, 0x79, 0xe9, 0x50, 0x75, 0x70, 0xbe, 0x91, 0x1d, 0xc4, 0xb8, 0xe0, 0xd4, 0xa2, 0xb2,
	0xcc, 0xe4, 0x54, 0x21, 0x7d, 0x2e, 0x16, 0x97, 0xd4, 0xdc, 0x7c, 0x21, 0x41, 0x3d, 0xb0, 0xc5,
	0x48, 0x36, 0x49, 0x09, 0x21, 0x0b, 0x41, 0x4c, 0x56, 0x62, 0x70, 0xe2, 0x8e, 0xe2, 0x84, 0x3b,
	0x36, 0x89, 0x0d, 0x4c, 0x19, 0x03, 0x02, 0x00, 0x00, 0xff, 0xff, 0x51, 0xe3, 0x43, 0x7f, 0xc0,
	0x00, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// DemoServiceClient is the client API for DemoService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type DemoServiceClient interface {
	Demo(ctx context.Context, in *DemoRequest, opts ...grpc.CallOption) (*DemoResponse, error)
}

type demoServiceClient struct {
	cc *grpc.ClientConn
}

func NewDemoServiceClient(cc *grpc.ClientConn) DemoServiceClient {
	return &demoServiceClient{cc}
}

func (c *demoServiceClient) Demo(ctx context.Context, in *DemoRequest, opts ...grpc.CallOption) (*DemoResponse, error) {
	out := new(DemoResponse)
	err := c.cc.Invoke(ctx, "/demo.demoService/Demo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// DemoServiceServer is the server API for DemoService service.
type DemoServiceServer interface {
	Demo(context.Context, *DemoRequest) (*DemoResponse, error)
}

// UnimplementedDemoServiceServer can be embedded to have forward compatible implementations.
type UnimplementedDemoServiceServer struct {
}

func (*UnimplementedDemoServiceServer) Demo(ctx context.Context, req *DemoRequest) (*DemoResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Demo not implemented")
}

func RegisterDemoServiceServer(s *grpc.Server, srv DemoServiceServer) {
	s.RegisterService(&_DemoService_serviceDesc, srv)
}

func _DemoService_Demo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DemoRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DemoServiceServer).Demo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/demo.demoService/Demo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DemoServiceServer).Demo(ctx, req.(*DemoRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _DemoService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "demo.demoService",
	HandlerType: (*DemoServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Demo",
			Handler:    _DemoService_Demo_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "demoproto/demo.proto",
}
